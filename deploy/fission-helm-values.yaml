openTelemetry:
  ## Use this flag to set the collector endpoint for OpenTelemetry.
  ## The variable is endpoint of the collector in the format shown below.
  ## otlpCollectorEndpoint: "otel-collector.observability.svc:4317"
  ##
  ## otlpCollectorEndpoint: "fission-trace-collector.observability.svc:4317"
  otlpCollectorEndpoint:
  ## Set this flag to false if you are using secure endpoint for the collector.
  ##
  otlpInsecure: true
  ## Key-value pairs to be used as headers associated with gRPC or HTTP requests to the collector.
  ## Eg. otlpHeaders: "key1=value1,key2=value2"
  ##
  otlpHeaders: ""
  ## Supported samplers:
  ## always_on - Sampler that always samples spans, regardless of the parent span's sampling decision.
  ## always_off - Sampler that never samples spans, regardless of the parent span's sampling decision.
  ## traceidratio - Sampler that samples probabalistically based on rate.
  ## parentbased_always_on - (default if empty) Sampler that respects its parent span's sampling decision, but otherwise always samples.
  ## parentbased_always_off - Sampler that respects its parent span's sampling decision, but otherwise never samples.
  ## parentbased_traceidratio - Sampler that respects its parent span's sampling decision, but otherwise samples probabalistically based on rate.
  ##
  tracesSampler: "parentbased_traceidratio"
  ## Each Sampler type defines its own expected input, if any.
  ## Currently we get trace ratio for the case of,
  ## 1. traceidratio
  ## 2. parentbased_traceidratio
  ## Sampling probability, a number in the [0..1] range, e.g. "0.1". Default is 0.1.
  ##
  tracesSamplingRate: "1"
  ## Supported providers:
  ## tracecontext - W3C Trace Context
  ## baggage - W3C Baggage
  ## b3 - B3 Single
  ## b3multi - B3 Multi
  ## jaeger - Jaeger uber-trace-id header
  ## xray - AWS X-Ray (third party)
  ## ottrace - OpenTracing Trace (third party)
  ##
  propagators: "tracecontext,baggage"
